01 Introduction to C# and Data Types
Understanding Data Types
Test your Knowledge
1.What type would you choose for the following “numbers”?
  A person’s telephone number: integer
  A person’s height: float
  A person’s age: integer
  A person’s gender (Male, Female, Prefer Not To Answer): string
  A person’s salary: decimal
  A book’s ISBN: long
  A book’s price: decimal
  A book’s shipping weight: float
  A country’s population: long
  The number of stars in the universe
  The number of employees in each of the small or medium businesses
  in the United Kingdom (up to about 50,000 employees per business): ushort

2.What are the difference between value type and reference type variables?
What is boxing and unboxing?
  Value Types:
  Directly contain their data
  Each has its own copy of data
  Operation on one can not effect another
  Reference Types:
  Store references to their data (Known as objects)
  Two reference variable can reference the same object
  Operation on one can effect another

  Boxing is the process of converting a value type to the type object or
  to any interface type implemented by this value type. When a CLR boxes
  a value type, it wraps the value inside a System. Object instance and
  stores it on the managed heap. Unboxing extracts the value type from the
  object.

3.What is meant by the terms managed resource and unmanaged resource in .NET?
  Managed resources refers to pure .NET code managed by the
  runtime. Unmanaged resources are those that are not.

4.Whats the purpose of Garbage Collector in .NET?
  The garbage collector manages the allocation and release of memory for the application.

Controlling Flow and Converting Types
Test your Knowledge

1.What happens when you divide an int variable by 0?
  Trying to divide an integer by zero throws a DivideByZeroException exception.

2.What happens when you divide a double variable by 0?
  An  ∞ sign is shown.

3.What happens when you overflow an int variable, that is, set it to a value beyond its range?
  When you go over the int limit, it will loop back to the negative side.

4.What is the difference between x = y++; and x = ++y;?
  y++ executes the statement and then increments the value. ++y increments the value
  and then executes the statement.

5.What is the difference between break, continue, and return when used inside a loop statement?
  The break statement terminates the closest enclosing iteration statement or switch statement.
  The continue statement starts a new iteration of the closest enclosing iteration statement.
  The return statement terminates execution of the function in which it appears and returns
  control to the caller.

6.What are the three parts of a for statement and which of them are required?
  The three parts: initialize, test, and update. Initialize is required.

7.What is the difference between the = and == operators?
  The == Operator compares the reference identity while the
  = method compares only contents.

8.Does the following statement compile? for ( ; true; ) ;
  Yes.

9.What does the underscore _ represent in a switch expression?
  The underscore (_) character replaces the default keyword to signify
  that it should match anything if reached

10.What interface must an object implement to be enumerated over by using the foreach statement?
  The IEnumerable interface permits enumeration by using a foreach loop for objects.

Practice loops and operators
1.If the code executes the loop would run forever because bytes can only increment 
  up to 255 then they will incur an overflow and reset to 0.
